
// top down ..gives tle
class Solution {
public:
int n;
void solve(vector<int>&nums,int i,int prev,vector<int>&temp,vector<int>&result){
    if(i>=n){
        if(temp.size()>result.size()){
            result=temp;
        }
        return;
    }
     
    if(prev==-1||nums[i]%prev==0){
        temp.push_back(nums[i]);
        solve(nums,i+1,nums[i],temp,result);
        temp.pop_back();
    }
    solve(nums,i+1,prev,temp,result);

}
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        n=nums.size();
        vector<int>result;
        vector<int>temp;
         sort(nums.begin(),nums.end());
         solve(nums,0,-1,temp,result);
         return result;
    }
};
